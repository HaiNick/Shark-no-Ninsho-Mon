version: "3.8"

services:
  app:
    build: ./app
    ports:
      - "8000:8000"         # Expose to LAN for direct access
    volumes:
      - ./emails.txt:/app/emails.txt:ro
      - ./routes.json:/app/routes.json  # Persist route configuration
    environment:
      - FLASK_ENV=production
      - EMAILS_FILE_PATH=/app/emails.txt
      # Prefer stdout logging; Docker will capture it
      # - LOG_FILE_PATH=/app/access.log
    healthcheck:
      test: ["CMD", "python3", "-c", "import requests; requests.get('http://localhost:8000/health').raise_for_status()"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  oauth2-proxy:
    image: quay.io/oauth2-proxy/oauth2-proxy:v7.12.0-alpine
    ports:
      - "4180:4180"  # Expose to LAN (change to 127.0.0.1:4180:4180 for localhost only)
    env_file:
      - ./.env
    environment:
      OAUTH2_PROXY_PROVIDER: google
      OAUTH2_PROXY_SCOPE: "openid email profile"
      OAUTH2_PROXY_REDIRECT_URL: "${FUNNEL_HOST}/oauth2/callback"
      OAUTH2_PROXY_WHITELIST_DOMAINS: "${FUNNEL_HOSTNAME},localhost,127.0.0.1"
      # Point OAuth2 Proxy to Caddy (edge proxy) instead of Flask
      OAUTH2_PROXY_UPSTREAMS: "http://caddy:8080"
      OAUTH2_PROXY_HTTP_ADDRESS: "0.0.0.0:4180"
      OAUTH2_PROXY_REVERSE_PROXY: "true"
      OAUTH2_PROXY_PASS_USER_HEADERS: "true"
      OAUTH2_PROXY_PASS_AUTHORIZATION_HEADER: "true"
      OAUTH2_PROXY_PASS_ACCESS_TOKEN: "true"
      OAUTH2_PROXY_SET_AUTHORIZATION_HEADER: "true"
      OAUTH2_PROXY_PASS_BASIC_AUTH: "false"
      OAUTH2_PROXY_PREFER_EMAIL_TO_USER: "true"
      OAUTH2_PROXY_SET_XAUTHREQUEST: "true"
      OAUTH2_PROXY_AUTHENTICATED_EMAILS_FILE: "/etc/oauth2-proxy/emails.txt"
      OAUTH2_PROXY_SKIP_PROVIDER_BUTTON: "true"
      OAUTH2_PROXY_COOKIE_SECURE: "true"
      OAUTH2_PROXY_COOKIE_SAMESITE: "lax"
      # Enable detailed logging
      OAUTH2_PROXY_STANDARD_LOGGING: "true"
      OAUTH2_PROXY_REQUEST_LOGGING: "true"
      OAUTH2_PROXY_AUTH_LOGGING: "true"
    volumes:
      - ./emails.txt:/etc/oauth2-proxy/emails.txt:ro
    depends_on:
      caddy:
        condition: service_started
      app:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "wget", "--quiet", "--tries=1", "--spider", "http://localhost:4180/ping"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    restart: unless-stopped
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"

  # New: Caddy edge proxy with Admin API enabled
  caddy:
    image: caddy:2.8
    restart: unless-stopped
    volumes:
      - ./caddy/base.json:/etc/caddy/config.json:ro
    command: ["caddy","run","--config","/etc/caddy/config.json","--adapter","json"]
    ports:
      - "8080:8080"   # local edge proxy HTTP
      - "2019:2019"   # Caddy Admin API
    networks:
      - default
    logging:
      driver: "json-file"
      options:
        max-size: "10m"
        max-file: "3"
