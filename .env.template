# .env.template
# Copy this file to .env and fill in your actual values
# DO NOT commit .env to version control - it contains secrets!

# ============================================================================
# Google OAuth2 Client Credentials
# ============================================================================
# Get these from Google Cloud Console -> APIs & Credentials -> OAuth 2.0 Client IDs
OAUTH2_PROXY_CLIENT_ID=your-google-oauth-client-id-here
OAUTH2_PROXY_CLIENT_SECRET=your-google-oauth-client-secret-here

# ============================================================================
# Cookie Secret (32 random bytes, base64 encoded)
# ============================================================================
# Generate with: 
#   Linux/Mac: openssl rand 32 | base64 | tr -d '\n' | tr '+/' '-_'
#   Windows: run setup.ps1 to generate automatically
OAUTH2_PROXY_COOKIE_SECRET=your-32-byte-base64-cookie-secret-here

# ============================================================================
# Cookie Refresh & Expiration Configuration
# ============================================================================
# Cookie expiration time (how long before user must re-authenticate)
# Default: 168h (7 days)
# OAUTH2_PROXY_COOKIE_EXPIRE=168h

# Cookie refresh interval (how often to refresh authentication token)
# Set to 0 to disable automatic refresh (default behavior)
# Examples:
#   1m  = every minute (testing only)
#   1h  = every hour (high security)
#   24h = daily (balanced security)
#   168h = weekly (recommended)
#   720h = monthly (30 days, lower security)
# OAUTH2_PROXY_COOKIE_REFRESH=0

# ============================================================================
# Tailscale Funnel Configuration
# ============================================================================
# Replace <your-host> and <your-tailnet> with your actual values
# Example: https://sharky.snowy-burbot.ts.net
FUNNEL_HOST=https://<your-host>.<your-tailnet>.ts.net
FUNNEL_HOSTNAME=<your-host>.<your-tailnet>.ts.net

# ============================================================================
# Application Configuration (Optional - Defaults provided)
# ============================================================================
# Environment: production or development
# FLASK_ENV=production

# Development Mode - Set to true to bypass OAuth2 (for local testing only!)
# DEV_MODE=false

# Debug mode (only for development)
# DEBUG=false

# Server configuration
# PORT=8000
# HOST=0.0.0.0

# Security
# SECRET_KEY=change-this-in-production

# Custom paths (optional)
# EMAILS_FILE_PATH=/app/emails.txt
# LOG_FILE_PATH=/app/access.log  # Comment out to use stdout (recommended)

# Health Check Configuration
# HEALTH_CHECK_ENABLED=true
# HEALTH_CHECK_INTERVAL=300  # Seconds between health checks

# Service Status Classification (New)
# HTTP_TIMEOUT_SEC=3  # HTTP request timeout (1-10 seconds, default: 3)
# SLOW_THRESHOLD_MS=2000  # Threshold for slow responses in ms (default: 2000)

# ============================================================================
# Flask Session Configuration
# ============================================================================
# Flask session cookie settings (separate from OAuth2 Proxy cookies)
# These control the Flask dashboard session behavior

# SESSION_COOKIE_SECURE=true  # Only send over HTTPS (recommended for production)
# SESSION_COOKIE_HTTPONLY=true  # Prevent JavaScript access (recommended)
# SESSION_COOKIE_SAMESITE=Lax  # CSRF protection (Lax, Strict, or None)

# Permanent session lifetime (in seconds)
# Default: 604800 (7 days)
# Examples:
#   3600 = 1 hour
#   86400 = 1 day
#   604800 = 7 days
#   2592000 = 30 days
# PERMANENT_SESSION_LIFETIME=604800

# ============================================================================
# Logging Configuration (Set in docker-compose.yml)
# ============================================================================
# Docker logs are bounded to prevent disk space issues:
# - max-size: 10m (max 10MB per log file)
# - max-file: 3 (keep last 3 files = 30MB max per service)
#
# OAuth2 Proxy logging is enabled:
# - OAUTH2_PROXY_STANDARD_LOGGING: true
# - OAUTH2_PROXY_REQUEST_LOGGING: true (logs each request)
# - OAUTH2_PROXY_AUTH_LOGGING: true (logs auth decisions)
#
# View logs with: docker compose logs -f [service_name]

# ============================================================================
# Setup Instructions:
# ============================================================================
# 1. Copy this file: cp .env.template .env
# 2. Fill in your Google OAuth2 credentials
# 3. Generate and set OAUTH2_PROXY_COOKIE_SECRET
# 4. Set your Tailscale Funnel hostname
# 5. Update emails.txt with allowed email addresses
# 6. Run: docker compose up -d --build
# 7. Start Funnel: tailscale funnel 4180
#
# For security best practices, see SECURITY.md
