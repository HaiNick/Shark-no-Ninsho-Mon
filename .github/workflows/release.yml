name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  check-run-condition:
    runs-on: ubuntu-latest
    outputs:
      should-run: ${{ steps.check.outputs.should-run }}
    steps:
    - name: Check if workflow should run
      id: check
      run: |
        if [ "${{ vars.ACTION_RUN }}" = "false" ]; then
          echo "should-run=false" >> $GITHUB_OUTPUT
          echo "Workflow disabled by ACTION_RUN environment variable"
        else
          echo "should-run=true" >> $GITHUB_OUTPUT
          echo "Workflow enabled"
        fi

  release:
    runs-on: ubuntu-latest
    needs: check-run-condition
    if: needs.check-run-condition.outputs.should-run == 'true'
    
    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - name: Generate changelog
      id: changelog
      run: |
        # Generate changelog from git commits
        PREVIOUS_TAG=$(git describe --tags --abbrev=0 HEAD^ 2>/dev/null || echo "")
        if [ -z "$PREVIOUS_TAG" ]; then
          COMMITS=$(git log --pretty=format:"- %s (%h)" --no-merges)
        else
          COMMITS=$(git log ${PREVIOUS_TAG}..HEAD --pretty=format:"- %s (%h)" --no-merges)
        fi
        
        echo "CHANGELOG<<EOF" >> $GITHUB_OUTPUT
        echo "## Changes" >> $GITHUB_OUTPUT
        echo "$COMMITS" >> $GITHUB_OUTPUT
        echo "EOF" >> $GITHUB_OUTPUT

    - name: Create Release
      uses: actions/create-release@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        tag_name: ${{ github.ref }}
        release_name: Release ${{ github.ref }}
        body: |
          # Shark-no-Ninsho-Mon Release ${{ github.ref }}
          
          ## What's New
          ${{ steps.changelog.outputs.CHANGELOG }}
          
          ## Installation
          ```bash
          git clone https://github.com/HaiNick/Shark-no-Ninsho-Mon.git
          cd Shark-no-Ninsho-Mon
          git checkout ${{ github.ref }}
          ```
          
          ## Quick Start
          Follow the [README.md](https://github.com/HaiNick/Shark-no-Ninsho-Mon#quick-start) for setup instructions.
          
          ## Docker Images
          - Main application: Built from source
          - OAuth2 Proxy: `quay.io/oauth2-proxy/oauth2-proxy:latest`
          - Tailscale: `tailscale/tailscale:latest`
          
          ## Security Notes
          - Always use the latest version for security updates
          - Review the [SECURITY.md](https://github.com/HaiNick/Shark-no-Ninsho-Mon/blob/main/SECURITY.md) for best practices
          
          ## Support
          - Report issues: [GitHub Issues](https://github.com/HaiNick/Shark-no-Ninsho-Mon/issues)
          - Documentation: [README.md](https://github.com/HaiNick/Shark-no-Ninsho-Mon#readme)
        draft: false
        prerelease: false

  docker-release:
    runs-on: ubuntu-latest
    needs: [check-run-condition, release]
    if: needs.check-run-condition.outputs.should-run == 'true'
    
    steps:
    - uses: actions/checkout@v4

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3

    - name: Log in to Docker Hub (optional)
      if: ${{ secrets.DOCKER_USERNAME && secrets.DOCKER_PASSWORD }}
      uses: docker/login-action@v3
      with:
        username: ${{ secrets.DOCKER_USERNAME }}
        password: ${{ secrets.DOCKER_PASSWORD }}

    - name: Extract metadata
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          hainick/shark-no-ninsho-mon
        tags: |
          type=ref,event=tag
          type=semver,pattern={{version}}
          type=semver,pattern={{major}}.{{minor}}

    - name: Build and push Docker image
      if: ${{ secrets.DOCKER_USERNAME && secrets.DOCKER_PASSWORD }}
      uses: docker/build-push-action@v5
      with:
        context: ./app
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        labels: ${{ steps.meta.outputs.labels }}
        platforms: linux/amd64,linux/arm64